package com.fidelity.springsecurityjdbc;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;

public class UpdatePasswordEncoder {

    // The URL of the SQLite database
    private static final String DB_URL = "jdbc:sqlite:com.fidelity.springsecurityjdbc.security.db";

    // The SQL query to select all the records from the users table
    private static final String SELECT_QUERY = "select username, password from users";

    // The SQL query to update the password column in the users table
    private static final String UPDATE_QUERY = "update users set password = ? where username = ?";

    // The strength parameter for the BCryptPasswordEncoder
    private static final int STRENGTH = 10;

    public static void main(String[] args) {
        // Create an instance of the BCryptPasswordEncoder
        BCryptPasswordEncoder passwordEncoder = new BCryptPasswordEncoder(STRENGTH);

        // Create a connection to the SQLite database
        try (Connection conn = DriverManager.getConnection(DB_URL)) {
            // Create a statement to execute the select query
            try (PreparedStatement stmt = conn.prepareStatement(SELECT_QUERY)) {
                // Execute the query and get the result set
                try (ResultSet rs = stmt.executeQuery()) {
                    // Loop through all the records in the result set
                    while (rs.next()) {
                        // Get the username and the plain text password from the result set
                        String username = rs.getString("username");
                        String plainPassword = rs.getString("password");

                        // Hash the plain text password with the BCryptPasswordEncoder
                        String hashedPassword = passwordEncoder.encode(plainPassword);

                        // Create a statement to execute the update query
                        try (PreparedStatement updateStmt = conn.prepareStatement(UPDATE_QUERY)) {
                            // Set the hashed password and the username as the parameters for the update query
                            updateStmt.setString(1, hashedPassword);
                            updateStmt.setString(2, username);
                        
                            // Execute the update query
                            updateStmt.executeUpdate();
                           
                           System.out.println("it works" + username );
                           
                           
                        }
                    }
                }
            }
        } catch (SQLException e) {
            // Handle any SQL exceptions
            e.printStackTrace();
        }
    }

	public String encode(String password) {
		// TODO Auto-generated method stub
		return null;
	}
}
